# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

#       # Runs a single command using the runners shell
#       - name: Fetch API Data
#         # You may pin to the exact commit or the version.
#         # uses: JamesIves/fetch-api-data-action@c38518c0358c6a522f0d4880212b65963e2d6574
#         uses: JamesIves/fetch-api-data-action@v2.2.0
#         with:
#           # The URL of the endpoint you would like to retrieve data from.
#           endpoint: 
#           # Any applicable configuration settings that should be set such as authentication tokens. You can reference secrets using the secrets syntax, or you can reference data returned from the `TOKEN_ENDPOINT` request using the triple bracket syntax.
#           configuration: # optional
#           # If the `ENDPOINT` API requires you to make a request to get an access token prior to fetching data you can perform this task by specifying a token endpoint. Any data returned from the token end can be referenced in the `CONFIGURATION` variable using the triple bracket syntax.
#           token-endpoint: # optional
#           # Any applicable configuration settings that should be set such as authentication tokens. You can reference secrets using the secrets syntax.
#           token-configuration: # optional
#           # If you are working with an intermittent API you can toggle this option to true. Doing so will make the action try the request 3 times at random invervals before failing.
#           retry: # optional
#           # By default the save location of the JSON file is `fetch-api-data-action/data.json`, if you would like to override the directory you can do so by specifying a new one with this variable.
#           save-location: # optional
#           # You can override the name of the exported `.json` file by specifying a new one here. You should _not_ include the file extension in your name.
#           save-name: # optional
#           # If set to true the action will log the API responses it receives in the terminal.
#           debug: # optional
#           # Allows you to modify the format of the saved file, for example you can use txt here to save the file as a txt file. This field defaults to json.
#           format: # optional
#           # Allows you to specify the encoding the saved file, can be of type BufferEncoding: "ascii" | "utf8" | "utf-8" | "utf16le" | "ucs2" | "ucs-2" | "base64" | "latin1" | "binary" | "hex".
#           encoding: # optional
